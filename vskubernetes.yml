apiVersion: apps/v1
kind: Deployment
metadata:
  name: springriplicationiset
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: spring
  template:
    metadata:
      name: springpod
      labels:
        app: spring
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: springcontainer
        image: 172.31.9.197:8083/spring-boot-app:17
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: springmongosecret
              key: username
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springmongosecret
              key: password
        - name: MONGO_DB_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: springmongoconfig 
              key: mongodb_url
        resources:
          requests:
            memory: "200Mi"
            cpu: "10m"
          limits:
            memory: "250Mi"
            cpu: "20m"
        readinessProbe:
          httpGet:
            path: /spring-boot-mongo-1.0
            port: 31015
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 60
        livenessProbe:
          httpGet:
            path: /spring-boot-mongo-1.0
            port: 31015
          initialDelaySeconds: 15
          timeoutSeconds: 1                    
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  type: NodePort
  selector:
    app: spring
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodeployment
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
      - name: mongodb-pvc
        persistentVolumeClaim:
          claimName: pvc-hostpath
      containers:
      - image: mongo
        name: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: springmongosecret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springmongosecret
              key: password
        volumeMounts:
        - name: mongodb-pvc
          mountPath: /data/db
        resources:
          requests:
            memory: "200Mi"
            cpu: "10m"
          limits:
            memory: "250Mi"
            cpu: "20m"
---
apiVersion: v1
kind: Service
metadata:
  name: mongoservice
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
